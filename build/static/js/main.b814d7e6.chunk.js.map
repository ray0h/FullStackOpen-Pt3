{"version":3,"sources":["filter.js","addNewPerson.js","people.js","services/persons.js","App.js","index.js"],"names":["Filter","search","changeHandler","className","value","onChange","NewInput","text","newValue","NewPerson","submitHandler","nameValue","nameHandler","numberValue","numberHandler","onSubmit","type","Person","name","number","delHandler","onClick","People","persons","map","each","key","id","axios","get","then","response","data","person","post","delete","changed","put","Message","message","errorMsg","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","searchStr","setSearchStr","setMessage","setErrorMsg","useEffect","personService","ppl","regEx","RegExp","personsToShow","filter","match","e","target","preventDefault","currentNames","currentNums","includes","find","window","confirm","updPerson","returnedPeep","setTimeout","catch","error","newPeep","concat","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b814d7e6.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Filter = ( { search, changeHandler }) => {\n    return (\n        <form className=\"filterForm\">\n            <div>\n                search list for name:\n                <input \n                    value={search}\n                    onChange={changeHandler}\n                />\n            </div>\n        </form>\n    )\n}\nexport default Filter","import React from 'react'\n\nconst NewInput = ({ text, newValue, changeHandler}) => {\n    return (\n        <div>\n            {text}:\n            <input \n                value = {newValue}\n                onChange = {changeHandler}\n            />\n        </div>\n    )\n}\n\nconst NewPerson = ({ submitHandler, nameValue, nameHandler, numberValue, numberHandler }) => {\n    return (\n        <form className=\"personForm\" onSubmit={submitHandler}>\n            <NewInput text=\"name\" newValue={nameValue} changeHandler={nameHandler}/>\n            <NewInput text=\"number\" newValue={numberValue} changeHandler={numberHandler}/>\n            <div>\n                <button type=\"submit\">\n                    Add\n                </button>\n            </div>\n        </form>\n    )\n}\n\nexport default NewPerson\n","import React from \"react\"\n\nconst Person = ({ name, number, delHandler}) => {\n\n    return (\n        <div className = \"entryCont\">\n            <p>{name}, {number}</p>\n            <button value = {name} onClick={delHandler}>delete</button>\n        </div>\n)}\nconst People = ({ persons, delHandler }) => persons.map(each => <Person key={each.id} name={each.name} number={each.number} delHandler={delHandler}/>)\n\nexport default People","import axios from \"axios\"\n\nconst localURL=\"/api/persons\"\n\nconst getAll = () => {\n    const request = axios.get(localURL)\n    return request.then(response => response.data)\n}\n\nconst create = (person) => {\n    const request = axios.post(localURL, person)\n    return request.then(response => response.data)\n}\n\nconst erase = (id) => {\n    return axios.delete(`${localURL}/${id}`)\n}\n\nconst update = (id, changed) => {\n    const request = axios.put(`${localURL}/${id}`, changed)\n    return request.then(response => response.data)\n}\n\nexport default {\n    getAll,\n    create,\n    erase,\n    update\n}","import React, { useState, useEffect } from \"react\"\nimport './index.css'\nimport Filter from \"./filter.js\"\nimport NewPerson from \"./addNewPerson.js\"\nimport People from \"./people.js\"\nimport personService from \"./services/persons.js\"\n\nconst Message = ({message, errorMsg}) => {\n    if (errorMsg) {\n        return <div className=\"msgCont error\">{message}</div>\n    } else {\n        return <div className=\"msgCont\">{message}</div>\n    }\n}\n\nconst App = () => {\n\n    const [ persons, setPersons ] = useState([])\n    const [ newName, setNewName ] = useState(\"\")\n    const [ newNumber, setNewNumber] = useState(\"\")\n    const [ searchStr, setSearchStr] = useState(\"\")\n    const [ message, setMessage ] = useState(\"\")\n    const [ errorMsg, setErrorMsg ] = useState(false)\n\n    useEffect( () => {\n        personService\n            .getAll()\n            .then((ppl) => {\n                setPersons(ppl)\n            })\n    }, [])\n\n    const handleNewName = (e) => setNewName(e.target.value)\n    const handleNewNumber = (e) => setNewNumber(e.target.value)\n    const handleSearchStr = (e) => setSearchStr(e.target.value)\n    const handleDel = (e) => {\n        let name = e.target.value\n        let id = persons.find(p => p.name === name).id\n        let delPerson = window.confirm(`Confirm deleting ${name}?`)\n        if (delPerson) { \n            personService\n                .erase(id)\n                .then(setPersons(persons.filter(each => each.id !== id)))\n                .then( () =>\n                    {setErrorMsg(false)\n                    setMessage(`${name} was deleted from the phonebook.`)\n                    setTimeout( () => {setMessage(\"\")}, 4000)}\n                )\n        }\n    }\n\n    const addPerson = (e) => {\n        e.preventDefault()\n        const currentNames = persons.map(each => each.name)\n        const currentNums = persons.map(each => each.number)\n        if (!currentNames.includes(newName)) {\n            const newPerson = {\n                name: newName,\n                number: newNumber,\n            }\n            personService\n                .create(newPerson)\n                .then(newPeep => {\n                    setPersons(persons.concat(newPeep))\n                    setNewName(\"\")\n                    setNewNumber(\"\")\n                })\n                .then( () => {\n                    setErrorMsg(false)\n                    setMessage(`${newName} was added to the phonebook.`)\n                    setTimeout( () => {setMessage(\"\")}, 4000)\n                })\n                .catch(error => {\n                    setMessage(error.response.data.error) // this is the string\n                    setErrorMsg(true)\n                    setTimeout( () => {setMessage(\"\")}, 4000)\n                })\n        } else if (currentNames.includes(newName) && !currentNums.includes(newNumber)) {\n            let id = persons.find(each => (each.name === newName)).id\n            let updateNum = window.confirm(`Update ${newName}'s number?`)\n            if (updateNum) {\n                let person = persons.find(each => each.id === id)\n                let updPerson = {...person, number : newNumber }\n                personService   \n                    .update(id, updPerson)\n                    .then(returnedPeep => {\n                        setPersons(persons.map(each => (each.id !== id) ? each : returnedPeep))\n                        setMessage(`${newName}'s number has been updated.`)\n                        setTimeout( () => {setMessage(\"\")}, 4000)\n                        setErrorMsg(false)\n                    })\n                    .catch(error => {\n                        setMessage(`${newName} was already removed from the server`)\n                        setTimeout( () => {setMessage(\"\")}, 4000)\n                        setPersons(persons.filter(each => each.id !== id))\n                        setErrorMsg(true)\n                    }\n                )    \n            }\n        } else {\n            setMessage(`${newName} is already in the phonebook!`)\n            setErrorMsg(true)\n            setTimeout( () => {setMessage(\"\")}, 4000)\n        }\n    }\n    var regEx = new RegExp(\"^\"+searchStr)\n    const personsToShow = (searchStr !== \"\") ? persons.filter(each => each.name.match(regEx)) : persons\n\n    return (\n        <div className=\"mainCont\">\n            <div className=\"secondCont\">\n            <div className=\"decCont\">\n                <h2>Phonebook</h2>\n                <Filter search = {searchStr} changeHandler = {handleSearchStr}/>\n                <Message message={message} errorMsg={errorMsg} />\n            </div>\n            <div className=\"decCont\">    \n                <h2>Add a New Person</h2>\n                <NewPerson submitHandler={addPerson} nameValue={newName} nameHandler={handleNewName} numberValue={newNumber} numberHandler={handleNewNumber} />\n            </div>    \n            <div className=\"decCont\">  \n                <h2>Numbers</h2>\n                <People persons = {personsToShow} delHandler={handleDel}/>\n            </div>\n            </div>\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js'\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n"],"sourceRoot":""}